{"groups":[{"attributes":[{"doc":"Photomultiplier gain.","dtype":"float32","name":"pmt_gain","required":false},{"doc":"Lines imaged per second. This is also stored in /general/optophysiology but is kept here as it is useful information for analysis, and so good to be stored w/ the actual data.","dtype":"float32","name":"scan_line_rate","required":false}],"datasets":[{"dims":["width|height","width|height|depth"],"doc":"Width, height and depth of image, or imaged area, in meters.","dtype":"float32","name":"field_of_view","quantity":"?","shape":[[2],[3]]}],"doc":"Image stack recorded over time from 2-photon microscope.","links":[{"doc":"Link to ImagingPlane object from which this TimeSeries data was generated.","name":"imaging_plane","target_type":"ImagingPlane"}],"neurodata_type_def":"TwoPhotonSeries","neurodata_type_inc":"ImageSeries"},{"datasets":[{"dims":[["num_times"],["num_times","num_ROIs"]],"doc":"Signals from ROIs.","dtype":"numeric","name":"data","shape":[[null],[null,null]]},{"doc":"DynamicTableRegion referencing into an ROITable containing information on the ROIs stored in this timeseries.","name":"rois","neurodata_type_inc":"DynamicTableRegion"}],"doc":"ROI responses over an imaging plane. The first dimension represents time. The second dimension, if present, represents ROIs.","neurodata_type_def":"RoiResponseSeries","neurodata_type_inc":"TimeSeries"},{"default_name":"DfOverF","doc":"dF/F information about a region of interest (ROI). Storage hierarchy of dF/F should be the same as for segmentation (i.e., same names for ROIs and for image planes).","groups":[{"doc":"RoiResponseSeries object(s) containing dF/F for a ROI.","neurodata_type_inc":"RoiResponseSeries","quantity":"+"}],"neurodata_type_def":"DfOverF","neurodata_type_inc":"NWBDataInterface"},{"default_name":"Fluorescence","doc":"Fluorescence information about a region of interest (ROI). Storage hierarchy of fluorescence should be the same as for segmentation (ie, same names for ROIs and for image planes).","groups":[{"doc":"RoiResponseSeries object(s) containing fluorescence data for a ROI.","neurodata_type_inc":"RoiResponseSeries","quantity":"+"}],"neurodata_type_def":"Fluorescence","neurodata_type_inc":"NWBDataInterface"},{"default_name":"ImageSegmentation","doc":"Stores pixels in an image that represent different regions of interest (ROIs) or masks. All segmentation for a given imaging plane is stored together, with storage for multiple imaging planes (masks) supported. Each ROI is stored in its own subgroup, with the ROI group containing both a 2D mask and a list of pixels that make up this mask. Segments can also be used for masking neuropil. If segmentation is allowed to change with time, a new imaging plane (or module) is required and ROI names should remain consistent between them.","groups":[{"doc":"Results from image segmentation of a specific imaging plane.","neurodata_type_inc":"PlaneSegmentation","quantity":"+"}],"neurodata_type_def":"ImageSegmentation","neurodata_type_inc":"NWBDataInterface"},{"datasets":[{"dims":[["num_roi","num_x","num_y"],["num_roi","num_x","num_y","num_z"]],"doc":"ROI masks for each ROI. Each image mask is the size of the original imaging plane (or volume) and members of the ROI are finite non-zero.","name":"image_mask","neurodata_type_inc":"VectorData","quantity":"?","shape":[[null,null,null],[null,null,null,null]]},{"doc":"Index into pixel_mask.","name":"pixel_mask_index","neurodata_type_inc":"VectorIndex","quantity":"?"},{"doc":"Pixel masks for each ROI: a list of indices and weights for the ROI. Pixel masks are concatenated and parsing of this dataset is maintained by the PlaneSegmentation","dtype":[{"doc":"Pixel x-coordinate.","dtype":"uint32","name":"x"},{"doc":"Pixel y-coordinate.","dtype":"uint32","name":"y"},{"doc":"Weight of the pixel.","dtype":"float32","name":"weight"}],"name":"pixel_mask","neurodata_type_inc":"VectorData","quantity":"?"},{"doc":"Index into voxel_mask.","name":"voxel_mask_index","neurodata_type_inc":"VectorIndex","quantity":"?"},{"doc":"Voxel masks for each ROI: a list of indices and weights for the ROI. Voxel masks are concatenated and parsing of this dataset is maintained by the PlaneSegmentation","dtype":[{"doc":"Voxel x-coordinate.","dtype":"uint32","name":"x"},{"doc":"Voxel y-coordinate.","dtype":"uint32","name":"y"},{"doc":"Voxel z-coordinate.","dtype":"uint32","name":"z"},{"doc":"Weight of the voxel.","dtype":"float32","name":"weight"}],"name":"voxel_mask","neurodata_type_inc":"VectorData","quantity":"?"}],"doc":"Results from image segmentation of a specific imaging plane.","groups":[{"doc":"Image stacks that the segmentation masks apply to.","groups":[{"doc":"One or more image stacks that the masks apply to (can be one-element stack).","neurodata_type_inc":"ImageSeries","quantity":"*"}],"name":"reference_images"}],"links":[{"doc":"Link to ImagingPlane object from which this data was generated.","name":"imaging_plane","target_type":"ImagingPlane"}],"neurodata_type_def":"PlaneSegmentation","neurodata_type_inc":"DynamicTable"},{"datasets":[{"doc":"Description of the imaging plane.","dtype":"text","name":"description","quantity":"?"},{"doc":"Excitation wavelength, in nm.","dtype":"float32","name":"excitation_lambda"},{"doc":"Rate that images are acquired, in Hz. If the corresponding TimeSeries is present, the rate should be stored there instead.","dtype":"float32","name":"imaging_rate","quantity":"?"},{"doc":"Calcium indicator.","dtype":"text","name":"indicator"},{"doc":"Location of the imaging plane. Specify the area, layer, comments on estimation of area/layer, stereotaxic coordinates if in vivo, etc. Use standard atlas names for anatomical regions when possible.","dtype":"text","name":"location"},{"attributes":[{"default_value":1,"doc":"Scalar to multiply each element in data to convert it to the specified 'unit'. If the data are stored in acquisition system units or other units that require a conversion to be interpretable, multiply the data by 'conversion' to convert the data to the specified 'unit'. e.g. if the data acquisition system stores values in this object as pixels from x = -500 to 499, y = -500 to 499 that correspond to a 2 m x 2 m range, then the 'conversion' multiplier to get from raw data acquisition pixel units to meters is 2/1000.","dtype":"float32","name":"conversion","required":false},{"default_value":"meters","doc":"Base unit of measurement for working with the data. The default value is 'meters'.","dtype":"text","name":"unit","required":false}],"dims":[["height","width","x, y, z"],["height","width","depth","x, y, z"]],"doc":"DEPRECATED Physical position of each pixel. 'xyz' represents the position of the pixel relative to the defined coordinate space. Deprecated in favor of origin_coords and grid_spacing.","dtype":"float32","name":"manifold","quantity":"?","shape":[[null,null,3],[null,null,null,3]]},{"attributes":[{"default_value":"meters","doc":"Measurement units for origin_coords. The default value is 'meters'.","dtype":"text","name":"unit"}],"dims":["x, y","x, y, z"],"doc":"Physical location of the first element of the imaging plane (0, 0) for 2-D data or (0, 0, 0) for 3-D data. See also reference_frame for what the physical location is relative to (e.g., bregma).","dtype":"float32","name":"origin_coords","quantity":"?","shape":[2,3]},{"attributes":[{"default_value":"meters","doc":"Measurement units for grid_spacing. The default value is 'meters'.","dtype":"text","name":"unit"}],"dims":["x, y","x, y, z"],"doc":"Space between pixels in (x, y) or voxels in (x, y, z) directions, in the specified unit. Assumes imaging plane is a regular grid. See also reference_frame to interpret the grid.","dtype":"float32","name":"grid_spacing","quantity":"?","shape":[2,3]},{"doc":"Describes reference frame of origin_coords and grid_spacing. For example, this can be a text description of the anatomical location and orientation of the grid defined by origin_coords and grid_spacing or the vectors needed to transform or rotate the grid to a common anatomical axis (e.g., AP/DV/ML). This field is necessary to interpret origin_coords and grid_spacing. If origin_coords and grid_spacing are not present, then this field is not required. For example, if the microscope takes 10 x 10 x 2 images, where the first value of the data matrix (index (0, 0, 0)) corresponds to (-1.2, -0.6, -2) mm relative to bregma, the spacing between pixels is 0.2 mm in x, 0.2 mm in y and 0.5 mm in z, and larger numbers in x means more anterior, larger numbers in y means more rightward, and larger numbers in z means more ventral, then enter the following -- origin_coords = (-1.2, -0.6, -2) grid_spacing = (0.2, 0.2, 0.5) reference_frame = \"Origin coordinates are relative to bregma. First dimension corresponds to anterior-posterior axis (larger index = more anterior). Second dimension corresponds to medial-lateral axis (larger index = more rightward). Third dimension corresponds to dorsal-ventral axis (larger index = more ventral).\"","dtype":"text","name":"reference_frame","quantity":"?"}],"doc":"An imaging plane and its metadata.","groups":[{"doc":"An optical channel used to record from an imaging plane.","neurodata_type_inc":"OpticalChannel","quantity":"+"}],"links":[{"doc":"Link to the Device object that was used to record from this electrode.","name":"device","target_type":"Device"}],"neurodata_type_def":"ImagingPlane","neurodata_type_inc":"NWBContainer","quantity":"*"},{"datasets":[{"doc":"Description or other notes about the channel.","dtype":"text","name":"description"},{"doc":"Emission wavelength for channel, in nm.","dtype":"float32","name":"emission_lambda"}],"doc":"An optical channel used to record from an imaging plane.","neurodata_type_def":"OpticalChannel","neurodata_type_inc":"NWBContainer"},{"default_name":"MotionCorrection","doc":"An image stack where all frames are shifted (registered) to a common coordinate system, to account for movement and drift between frames. Note: each frame at each point in time is assumed to be 2-D (has only x & y dimensions).","groups":[{"doc":"Reuslts from motion correction of an image stack.","neurodata_type_inc":"CorrectedImageStack","quantity":"+"}],"neurodata_type_def":"MotionCorrection","neurodata_type_inc":"NWBDataInterface"},{"doc":"Reuslts from motion correction of an image stack.","groups":[{"doc":"Image stack with frames shifted to the common coordinates.","name":"corrected","neurodata_type_inc":"ImageSeries"},{"doc":"Stores the x,y delta necessary to align each frame to the common coordinates, for example, to align each frame to a reference image.","name":"xy_translation","neurodata_type_inc":"TimeSeries"}],"links":[{"doc":"Link to ImageSeries object that is being registered.","name":"original","target_type":"ImageSeries"}],"neurodata_type_def":"CorrectedImageStack","neurodata_type_inc":"NWBDataInterface"}]}
