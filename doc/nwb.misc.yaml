groups:
- datasets:
  - attributes: []
    dims:
    - - num_times
    - - num_times
      - num_features
    doc: Values of each feature at each time.
    dtype: numeric
    name: data
    shape:
    - - null
    - - null
      - null
  - dims:
    - num_features
    doc: Units of each feature.
    dtype: text
    name: feature_units
    quantity: '?'
    shape:
    - null
  - dims:
    - num_features
    doc: Description of the features represented in TimeSeries::data.
    dtype: text
    name: features
    shape:
    - null
  doc: Abstract features, such as quantitative descriptions of sensory stimuli. The
    TimeSeries::data field is a 2D array, storing those features (e.g., for visual
    grating stimulus this might be orientation, spatial frequency and contrast). Null
    stimuli (eg, uniform gray) can be marked as being an independent feature (eg,
    1.0 for gray, 0.0 for actual stimulus) or by storing NaNs for feature values,
    or through use of the TimeSeries::control fields. A set of features is considered
    to persist until the next set of features is defined. The final set of features
    stored should be the null set. This is useful when storing the raw stimulus is
    impractical.
  neurodata_type_def: AbstractFeatureSeries
  neurodata_type_inc: TimeSeries
- datasets:
  - attributes:
    - doc: Smallest meaningful difference between values in data. Annotations have
        no units, so the value is fixed to -1.0.
      dtype: float
      name: resolution
      value: -1
    - doc: Base unit of measurement for working with the data. Annotations have no
        units, so the value is fixed to 'n/a'.
      dtype: text
      name: unit
      value: n/a
    dims:
    - num_times
    doc: Annotations made during an experiment.
    dtype: text
    name: data
    shape:
    - null
  doc: Stores user annotations made during an experiment. The data[] field stores
    a text array, and timestamps are stored for each annotation (ie, interval=1).
    This is largely an alias to a standard TimeSeries storing a text array but that
    is identifiable as storing annotations in a machine-readable way.
  neurodata_type_def: AnnotationSeries
  neurodata_type_inc: TimeSeries
- datasets:
  - attributes:
    - doc: Smallest meaningful difference between values in data. Annotations have
        no units, so the value is fixed to -1.0.
      dtype: float
      name: resolution
      value: -1
    - doc: Base unit of measurement for working with the data. Annotations have no
        units, so the value is fixed to 'n/a'.
      dtype: text
      name: unit
      value: n/a
    dims:
    - num_times
    doc: Use values >0 if interval started, <0 if interval ended.
    dtype: int8
    name: data
    shape:
    - null
  doc: Stores intervals of data. The timestamps field stores the beginning and end
    of intervals. The data field stores whether the interval just started (>0 value)
    or ended (<0 value). Different interval types can be represented in the same series
    by using multiple key values (eg, 1 for feature A, 2 for feature B, 3 for feature
    C, etc). The field data stores an 8-bit integer. This is largely an alias of a
    standard TimeSeries but that is identifiable as representing time intervals in
    a machine-readable way.
  neurodata_type_def: IntervalSeries
  neurodata_type_inc: TimeSeries
- datasets:
  - attributes:
    - default_value: no unit
      doc: Base unit of measurement for working with the data. Actual stored values
        are not necessarily stored in these units. To access the data in these units,
        multiply 'data' by 'conversion'.
      dtype: text
      name: unit
    dims:
    - num_times
    - num_channels
    - num_bands
    doc: Data decomposed into frequency bands.
    dtype: numeric
    name: data
    shape:
    - null
    - null
    - null
  - doc: The metric used, e.g. phase, amplitude, power.
    dtype: text
    name: metric
  doc: Spectral analysis of a time series, e.g. of an LFP or a speech signal.
  groups:
  - datasets:
    - doc: Name of the band, e.g. theta.
      dtype: text
      name: band_name
      neurodata_type_inc: VectorData
    - dims:
      - num_bands
      - low, high
      doc: Low and high limit of each band in Hz. If it is a Gaussian filter, use
        2 SD on either side of the center.
      dtype: float
      name: band_limits
      neurodata_type_inc: VectorData
      shape:
      - null
      - 2
    - dims:
      - num_bands
      doc: The mean Gaussian filters, in Hz.
      dtype: float
      name: band_mean
      neurodata_type_inc: VectorData
      shape:
      - null
    - dims:
      - num_bands
      doc: The standard deviation of Gaussian filters, in Hz.
      dtype: float
      name: band_stdev
      neurodata_type_inc: VectorData
      shape:
      - null
    doc: Table for describing the bands that this series was generated from. There
      should be one row in this table for each band.
    name: bands
    neurodata_type_inc: DynamicTable
  links:
  - doc: Link to TimeSeries object that this data was calculated from. Metadata about
      electrodes and their position can be read from that ElectricalSeries so it is
      not necessary to store that information here.
    name: source_timeseries
    quantity: '?'
    target_type: TimeSeries
  neurodata_type_def: DecompositionSeries
  neurodata_type_inc: TimeSeries
- datasets:
  - doc: Index into the spike_times dataset.
    name: spike_times_index
    neurodata_type_inc: VectorIndex
    quantity: '?'
  - doc: Spike times for each unit.
    dtype: double
    name: spike_times
    neurodata_type_inc: VectorData
    quantity: '?'
  - doc: Index into the obs_intervals dataset.
    name: obs_intervals_index
    neurodata_type_inc: VectorIndex
    quantity: '?'
  - dims:
    - num_intervals
    - start|end
    doc: Observation intervals for each unit.
    dtype: double
    name: obs_intervals
    neurodata_type_inc: VectorData
    quantity: '?'
    shape:
    - null
    - 2
  - doc: Index into electrodes.
    name: electrodes_index
    neurodata_type_inc: VectorIndex
    quantity: '?'
  - doc: Electrode that each spike unit came from, specified using a DynamicTableRegion.
    name: electrodes
    neurodata_type_inc: DynamicTableRegion
    quantity: '?'
  - doc: Electrode group that each spike unit came from.
    dtype:
      reftype: object
      target_type: ElectrodeGroup
    name: electrode_group
    neurodata_type_inc: VectorData
    quantity: '?'
  - dims:
    - - num_units
      - num_samples
    - - num_units
      - num_samples
      - num_electrodes
    doc: Spike waveform mean for each spike unit.
    dtype: float
    name: waveform_mean
    neurodata_type_inc: VectorData
    quantity: '?'
    shape:
    - - null
      - null
    - - null
      - null
      - null
  - dims:
    - - num_units
      - num_samples
    - - num_units
      - num_samples
      - num_electrodes
    doc: Spike waveform standard deviation for each spike unit.
    dtype: float
    name: waveform_sd
    neurodata_type_inc: VectorData
    quantity: '?'
    shape:
    - - null
      - null
    - - null
      - null
      - null
  default_name: Units
  doc: Data about spiking units. Event times of observed units (e.g. cell, synapse,
    etc.) should be concatenated and stored in spike_times.
  neurodata_type_def: Units
  neurodata_type_inc: DynamicTable
